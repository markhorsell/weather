[{"/home/mark/Documents/projects/weather/weather-frontend/src/Weather.tsx":"1","/home/mark/Documents/projects/weather/weather-frontend/src/App.tsx":"2","/home/mark/Documents/projects/weather/weather-frontend/src/reportWebVitals.ts":"3","/home/mark/Documents/projects/weather/weather-frontend/src/index.tsx":"4","/home/mark/Documents/projects/weather/weather-frontend/src/WeatherUseFetch.tsx":"5","/home/mark/Documents/projects/weather/weather-frontend/src/components/WeatherPoint.tsx":"6"},{"size":1471,"mtime":1609202972266,"results":"7","hashOfConfig":"8"},{"size":435,"mtime":1609504521836,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1607947708939,"results":"10","hashOfConfig":"8"},{"size":502,"mtime":1607956788784,"results":"11","hashOfConfig":"8"},{"size":1903,"mtime":1609504459215,"results":"12","hashOfConfig":"8"},{"size":477,"mtime":1609504486955,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1284ned",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/mark/Documents/projects/weather/weather-frontend/src/Weather.tsx",["29"],"import { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst queryClient = new QueryClient();\n\nexport default function Weather() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Example />\n    </QueryClientProvider>\n  );\n}\n\nfunction Example(): any {\n  //code is for azure id - IS NOT the weather data secret key\n\nconst fetchString=`https://markweather.azurewebsites.net/api/HttpTrigger2?code=bEePfjWLznUduliGYYUHeDGbzXLtSyCbPjgVyIe/Zh0iTlITyjywJA==`;\n//const fetchString=`http://localhost:7071/api/HttpTrigger2`;\n\n  const { isLoading, error, data } = useQuery(\"weatherData\", () =>\n    fetch(\n      fetchString\n    ).then((res) => \n  \n      res.json()\n    )\n    \n      \n  );\n  //https://markweather.azurewebsites.net/api/HttpTrigger2?code=bEePfjWLznUduliGYYUHeDGbzXLtSyCbPjgVyIe/Zh0iTlITyjywJA==\n\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    const e: any = error;\n    return \"An error has occurred x: \" + e.message;\n  }\n  if (data) {\n    console.log(data);\n  }\n\n  return (\n    <div style={{ padding: \"0px\", border: \"1px solid grey\" }}>\n \n    <div>\n    {data.list.map((dp:any) =>{\n      return <div>\n        {dp.dt_txt}{\" \"}\n        {dp.weather[0].main}\n        {dp.weather[0].icon}\n        <img src={`http://openweathermap.org/img/w/${dp.weather[0].icon}.png`}/>\n        </div>\n    })}\n    </div>\n  \n\n      <ReactQueryDevtools initialIsOpen />\n    </div>\n  );\n}\n","/home/mark/Documents/projects/weather/weather-frontend/src/App.tsx",[],"/home/mark/Documents/projects/weather/weather-frontend/src/reportWebVitals.ts",[],"/home/mark/Documents/projects/weather/weather-frontend/src/index.tsx",[],"/home/mark/Documents/projects/weather/weather-frontend/src/WeatherUseFetch.tsx",["30","31","32","33","34"],"import { useEffect, useState } from \"react\";\nimport useFetch from \"use-http\";\nimport WeatherPoint from \"./components/WeatherPoint\";\nimport dayjs from \"dayjs\";\n\nconst fetchString = `https://markweather.azurewebsites.net/api/HttpTrigger2?code=bEePfjWLznUduliGYYUHeDGbzXLtSyCbPjgVyIe/Zh0iTlITyjywJA==`;\n\nexport default function WeatherUseFetch() {\n  const options = {}; // these options accept all native `fetch` options\n  // the last argument below [] means it will fire onMount (GET by default)\n  const { loading, error, data = [] } = useFetch(fetchString, options, []);\n  const [days, setDays] = useState<any>([]);\n\n  //console.log(data)\n  useEffect(() => {\n    console.log(data);\n    if (data.list) {\n      setDays(\n        data.list.map((x: any) => {\n          {\n            //  console.log(dayjs(x.dt_txt).format(\"DD/MM/YYYY\"));\n          }\n          return x;\n        })\n      );\n\n      let testDays: any = [[]];\n      const start = data.list[0].dt_txt;\n      data.list.map((d: any, i: number) => {\n        {\n          if (\n            i > 0 &&\n            dayjs(d.dt_txt).format(\"DD/MM/YYYY\").toString() !=\n              dayjs(data.list[i - 1].dt_txt)\n                .format(\"DD/MM/YYYY\")\n                .toString()\n          ) {\n            testDays.push([]);\n          }\n          testDays[testDays.length - 1].push(d);\n        }\n      });\n      console.log(testDays);\n      setDays(testDays);\n    }\n  }, [data]);\n  return (\n    <div>\n      {error && \"Error!\"}\n      {loading && \"Loading...\"}\n      {days &&\n        days.map((day: any) => {\n          return (\n            <div>\n              {day.map((dp: any) => {\n                return <div style={{margin:\"10px\" , display:\"inline-block\", width:\"100px\", border:\"1px solid grey\"}}>\n                  <WeatherPoint key={dp.dt} dp={dp} />\n                  </div>\n              })}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n","/home/mark/Documents/projects/weather/weather-frontend/src/components/WeatherPoint.tsx",["35"],"\nimport dayjs from 'dayjs'\nexport default function WeatherPoint(data: any) {\n  const {dp} =data;\n\n\n  return (\n    <div key={dp.dt}>\n      {/*dp.dt_txt} {dp.weather[0].main*/}\n      <div>\n      {dayjs(dp.dt_txt).format('dddd').toString()} {dayjs(dp.dt_txt).format('DD/MM/YYYY').toString()}\n      </div>\n      <img src={`http://openweathermap.org/img/w/${dp.weather[0].icon}.png`} />\n      <div>\n      {dayjs(dp.dt_txt).format('HH mm').toString()}\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"36","severity":1,"message":"37","line":51,"column":9,"nodeType":"38","endLine":51,"endColumn":81},{"ruleId":"39","severity":1,"message":"40","line":20,"column":11,"nodeType":"41","messageId":"42","endLine":22,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":28,"column":13,"nodeType":"45","messageId":"46","endLine":28,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":29,"column":41,"nodeType":"49","messageId":"50","endLine":29,"endColumn":43},{"ruleId":"39","severity":1,"message":"40","line":30,"column":9,"nodeType":"41","messageId":"42","endLine":41,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":33,"column":61,"nodeType":"53","messageId":"54","endLine":33,"endColumn":63},{"ruleId":"36","severity":1,"message":"37","line":13,"column":7,"nodeType":"38","endLine":13,"endColumn":80},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","@typescript-eslint/no-unused-vars","'start' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]